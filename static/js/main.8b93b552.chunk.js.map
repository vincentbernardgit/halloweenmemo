{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","console","log","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEe,SAASA,EAAT,GAA8D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SAO7D,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAW,GAArC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBAAKF,UAAU,OAAOC,IAAI,gBAAgBE,QAVlC,WACVJ,GACAF,EAAaD,IAQqDM,IAAI,mB,UCT5EE,EAAW,CACf,CAAC,IAAO,eAAgBC,SAAS,GACjC,CAAC,IAAO,eAAgBA,SAAS,GACjC,CAAC,IAAO,gBAAiBA,SAAS,GAClC,CAAC,IAAO,gBAAiBA,SAAS,GAClC,CAAC,IAAO,gBAAiBA,SAAS,GAClC,CAAC,IAAO,gBAAiBA,SAAS,GAClC,CAAC,IAAO,gBAAiBA,SAAS,GAClC,CAAC,IAAO,gBAAiBA,SAAS,GAClC,CAAC,IAAO,gBAAiBA,SAAS,GAClC,CAAC,IAAO,gBAAiBA,SAAS,IAqFrBC,MAlFf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAa,WACjB,IAAMC,EAAc,UAAId,EAAeA,GACpCe,MAAK,kBAAIC,KAAKC,SAAS,MACvBC,KAAI,SAAC1B,GAAD,mBAAC,eAAYA,GAAb,IAAmB2B,GAAIH,KAAKC,cAEnCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAILd,EAAa,SAACD,GAClBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIhD4B,qBAAU,WACLZ,GAAaE,IACdE,GAAY,GACTJ,EAAUX,MAAMa,EAAUb,KAC3BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAGA,EAAKK,MAAMW,EAAUX,IACf,2BAAIL,GAAX,IAAiBS,SAAS,IAGnBT,QAIb8B,KAGAC,YAAW,kBAAID,MAAa,QAG/B,CAACd,EAAWE,IAEfc,QAAQC,IAAIrB,GAGZ,IAAMkB,EAAU,WACdb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAmB,GAAS,OAAEA,EAAU,KAC9Bd,GAAY,IAQd,OAJAQ,qBAAU,WACRP,MACC,IAGD,sBAAKjB,UAAU,MAAf,UACE,gDACA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,qBAAKI,UAAU,OAAf,SACE,cAACL,EAAD,CAA0BE,aAAcA,EAAcD,KAAMA,EAAME,QAASF,IAAOgB,GAAahB,IAAOkB,GAAalB,EAAKS,QAASN,SAAUA,GAA1HH,EAAK2B,KADG3B,EAAK2B,SAKpC,sBAAKvB,UAAU,OAAf,UACE,wBAAQG,QAASc,EAAjB,sBACA,wCAAWP,eCvFrBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8b93b552.chunk.js","sourcesContent":["import './singlecard.css'\r\n\r\nexport default function SingleCard({card, handleChoice, flipped, disabled}) {\r\n    const handleClick=()=>{\r\n        if(!disabled){\r\n            handleChoice(card)\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className={flipped ? \"flipped\": \"\"}>\r\n              <img className=\"front\" src={card.src} alt=\"card front\" />\r\n              <img className=\"back\" src=\"assets/33.png\" onClick={handleClick} alt=\"card back\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import SingleCard from './components/SingleCard'\nimport { useState, useEffect } from 'react'\nimport './App.css'\n\nconst cardImages=[\n  {\"src\": \"assets/4.png\", matched: false},\n  {\"src\": \"assets/5.png\", matched: false},\n  {\"src\": \"assets/13.png\", matched: false},\n  {\"src\": \"assets/14.png\", matched: false},\n  {\"src\": \"assets/15.png\", matched: false},\n  {\"src\": \"assets/16.png\", matched: false},\n  {\"src\": \"assets/17.png\", matched: false},\n  {\"src\": \"assets/18.png\", matched: false},\n  {\"src\": \"assets/38.png\", matched: false},\n  {\"src\": \"assets/39.png\", matched: false}\n]\n\nfunction App() {\n  const [cards, setCards]=useState([])\n  const [turns, setTurns]=useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  //shuffle cards\n  const shuffleCards=()=>{\n    const shuffledCards=[...cardImages, ...cardImages]\n      .sort(()=>Math.random()-0.5)\n      .map((card)=>({...card, id: Math.random()}))\n\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  //handle a choice\n  const handleChoice=(card)=>{\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  //compare 2 selected cards\n  useEffect(() => {\n    if(choiceOne && choiceTwo){\n      setDisabled(true)\n      if(choiceOne.src===choiceTwo.src){\n        setCards(prevCards=>{\n          return prevCards.map(card=>{\n            if(card.src===choiceOne.src){\n              return {...card, matched: true}\n            }\n            else{\n              return card\n            }\n          })\n        })\n        resetTurn()\n      }\n      else{\n        setTimeout(()=>resetTurn(), 1000)\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n  console.log(cards)\n\n  //reset choices & increase turn\n  const resetTurn=()=>{\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns=>prevTurns+1)\n    setDisabled(false)\n  }\n\n  //start a new game automatically\n  useEffect(()=>{\n    shuffleCards()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Halloween Memo</h1>\n      <div className=\"container\">\n        <div className=\"card-grid\">\n          {cards.map(card=>(\n            <div className=\"card\" key={card.id}>\n              <SingleCard key={card.id} handleChoice={handleChoice} card={card} flipped={card===choiceOne || card===choiceTwo || card.matched} disabled={disabled} />\n            </div>\n          ))}\n        </div>\n        <div className=\"menu\">\n          <button onClick={shuffleCards}>New Game</button>\n          <p>Turns: {turns}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}